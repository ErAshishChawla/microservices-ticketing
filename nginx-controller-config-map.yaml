apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.12.0-beta.0"},"name":"ingress-nginx-controller","namespace":"ingress-nginx"}}
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.12.0-beta.0
  name: nginx-configuration
  namespace: ingress-nginx
data:
  log-format-escape-json: "true"
  log-format-upstream: |
    {"timestamp": "$time_iso8601", 
    "hostname": "$host", 
    "requestID": "$req_id", 
    "proxyUpstreamName": "$proxy_upstream_name", 
    "proxyAlternativeUpstreamName": "$proxy_alternative_upstream_name", 
    "upstreamStatus": "$upstream_status", 
    "upstreamAddr": "$upstream_addr", 
    "upstreamBytesSent": "$upstream_bytes_sent", 
    "upstreamConnectTime": "$upstream_connect_time", 
    "upstreamHeaderTime": "$upstream_header_time", 
    "upstreamResponseTime": "$upstream_response_time", 
    "httpRequest": {
      "requestMethod": "$request_method", 
      "requestUrl": "$scheme://$host$request_uri", 
      "status": $status, 
      "requestSize": "$request_length", 
      "responseSize": "$body_bytes_sent", 
      "userAgent": "$http_user_agent", 
      "remoteIp": "$remote_addr", 
      "referer": "$http_referer", 
      "forwardedFor": "$http_x_forwarded_for", 
      "latency": "$request_time s", 
      "protocol": "$server_protocol", 
      "tlsVersion": "$ssl_protocol", 
      "cipher": "$ssl_cipher"
    }
    }
